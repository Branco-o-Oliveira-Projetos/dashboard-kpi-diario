version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "1633:1633"
    environment:
      - VITE_API_BASE_URL=http://dashboardkpidiarioapi.automacoesbeo.xyz
    restart: always
    networks:
      - BEONet
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.dashboard-frontend.rule=Host(`dashboardkpidiario.automacoesbeo.xyz`)
        - traefik.http.routers.dashboard-frontend.entrypoints=websecure
        - traefik.http.routers.dashboard-frontend.tls=true
        - traefik.http.routers.dashboard-frontend.tls.certresolver=letsencryptresolver
        - traefik.http.services.dashboard-frontend.loadbalancer.server.port=80

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
    ports:
      - "1644:1644"
    depends_on:
      - postgres
    restart: always
    networks:
      - BEONet
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
      labels:
        - traefik.enable=true
        - traefik.http.routers.dashboard-backend.rule=Host(`dashboardkpidiarioapi.automacoesbeo.xyz`)
        - traefik.http.routers.dashboard-backend.entrypoints=websecure
        - traefik.http.routers.dashboard-backend.tls=true
        - traefik.http.routers.dashboard-backend.tls.certresolver=letsencryptresolver
        - traefik.http.services.dashboard-backend.loadbalancer.server.port=8000

networks:
  BEONet:
    external: true        